{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"Q:\\\\learning\\\\Google_clone\\\\google_\\\\pages\\\\search.js\";\nimport Head from 'next/head';\nimport Header from '../components/Header';\nimport dotenv from 'dotenv';\n\nfunction Search(_ref) {\n  var results = _ref.results;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Search;\nexport var __N_SSP = true;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["Q:/learning/Google_clone/google_/pages/search.js"],"names":["Head","Header","dotenv","Search","results"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAIA,SAASC,MAAT,OAA2B;AAAA,MAAVC,OAAU,QAAVA,OAAU;AACvB,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQD,M;;AAWT,eAAeA,MAAf","sourcesContent":["import Head from 'next/head'\r\nimport Header from '../components/Header'\r\nimport dotenv from 'dotenv'\r\n\r\n\r\n\r\nfunction Search({results}) {\r\n    return (\r\n        <div>\r\n            <Head>\r\n                <title>Search Results</title>\r\n            </Head>\r\n            <Header/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\nexport async function getServerSideProps(context){\r\n    const useDummyData = false;\r\n    const data = await fetch(`https://www.googleapis.com/customsearch/v1?key=${process.env.API_KEY}&cx=${process.env.CONTEXT_KEY}&q=${context.query.term}`).then(res => res.json());\r\n\r\n    return {\r\n        props: {\r\n            results: data\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}